diff --git a/frameworks/js-bindings/bindings/Android.mk b/frameworks/js-bindings/bindings/Android.mk
index 6ea045a..db0cf4b 100644
--- a/frameworks/js-bindings/bindings/Android.mk
+++ b/frameworks/js-bindings/bindings/Android.mk
@@ -6,6 +6,8 @@ LOCAL_MODULE := cocos_jsb_static
 
 LOCAL_MODULE_FILENAME := libcocos2dxjsb
 
+LOCAL_ARM_MODE := arm
+
 LOCAL_SRC_FILES := auto/jsb_cocos2dx_auto.cpp \
                    auto/jsb_cocos2dx_builder_auto.cpp \
                    auto/jsb_cocos2dx_extension_auto.cpp \
diff --git a/frameworks/js-bindings/cocos2d-x/cocos/2d/cocos2dx.props b/frameworks/js-bindings/cocos2d-x/cocos/2d/cocos2dx.props
index a0a234e..afef5e9 100644
--- a/frameworks/js-bindings/cocos2d-x/cocos/2d/cocos2dx.props
+++ b/frameworks/js-bindings/cocos2d-x/cocos/2d/cocos2dx.props
@@ -7,7 +7,7 @@
   </PropertyGroup>
   <ItemDefinitionGroup>
     <Link>
-      <AdditionalDependencies>opengl32.lib;glew32.lib;libzlib.lib;libpng.lib;libjpeg.lib;libtiff.lib;libwebp.lib;libiconv.lib;glfw3.lib;freetype250.lib;winmm.lib;ws2_32.lib;libchipmunk.lib;libbox2d.lib;libSpine.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>opengl32.lib;glew32.lib;libzlib.lib;libpng.lib;libjpeg.lib;libtiff.lib;libwebp.lib;libiconv.lib;glfw3.lib;freetype250.lib;winmm.lib;ws2_32.lib;libchipmunk.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <AdditionalLibraryDirectories>$(OutDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>
     </Link>
@@ -17,4 +17,4 @@
     </ProjectReference>
   </ItemDefinitionGroup>
   <ItemGroup />
-</Project>
\ No newline at end of file
+</Project>
diff --git a/frameworks/js-bindings/cocos2d-x/external/Box2D/Common/b2Draw.h b/frameworks/js-bindings/cocos2d-x/external/Box2D/Common/b2Draw.h
index 20359c9..8c5f8ab 100755
--- a/frameworks/js-bindings/cocos2d-x/external/Box2D/Common/b2Draw.h
+++ b/frameworks/js-bindings/cocos2d-x/external/Box2D/Common/b2Draw.h
@@ -25,7 +25,7 @@
 struct b2Color
 {
 	b2Color() {}
-	b2Color(float32 r, float32 g, float32 b) : r(r), g(g), b(b) {}
+	b2Color(float32 r_, float32 g_, float32 b_) : r(r_), g(g_), b(b_) {}
 	void Set(float32 ri, float32 gi, float32 bi) { r = ri; g = gi; b = bi; }
 	float32 r, g, b;
 };
diff --git a/frameworks/js-bindings/cocos2d-x/external/Box2D/Common/b2Math.h b/frameworks/js-bindings/cocos2d-x/external/Box2D/Common/b2Math.h
index 755c519..0986c9f 100755
--- a/frameworks/js-bindings/cocos2d-x/external/Box2D/Common/b2Math.h
+++ b/frameworks/js-bindings/cocos2d-x/external/Box2D/Common/b2Math.h
@@ -56,7 +56,7 @@ struct b2Vec2
 	b2Vec2() {}
 
 	/// Construct using coordinates.
-	b2Vec2(float32 x, float32 y) : x(x), y(y) {}
+	b2Vec2(float32 x_, float32 y_) : x(x_), y(y_) {}
 
 	/// Set this vector to all zeros.
 	void SetZero() { x = 0.0f; y = 0.0f; }
@@ -147,7 +147,7 @@ struct b2Vec3
 	b2Vec3() {}
 
 	/// Construct using coordinates.
-	b2Vec3(float32 x, float32 y, float32 z) : x(x), y(y), z(z) {}
+	b2Vec3(float32 x_, float32 y_, float32 z_) : x(x_), y(y_), z(z_) {}
 
 	/// Set this vector to all zeros.
 	void SetZero() { x = 0.0f; y = 0.0f; z = 0.0f; }
diff --git a/frameworks/js-bindings/cocos2d-x/external/Box2D/Dynamics/b2World.cpp b/frameworks/js-bindings/cocos2d-x/external/Box2D/Dynamics/b2World.cpp
index a3a6a1e..4840e43 100755
--- a/frameworks/js-bindings/cocos2d-x/external/Box2D/Dynamics/b2World.cpp
+++ b/frameworks/js-bindings/cocos2d-x/external/Box2D/Dynamics/b2World.cpp
@@ -1145,6 +1145,11 @@ void b2World::DrawDebugData()
 	{
 		for (b2Body* b = m_bodyList; b; b = b->GetNext())
 		{
+			bool hasContacts = false;
+			for (b2ContactEdge* edge = b->GetContactList(); edge; edge = edge->next)
+				if (edge->contact->IsEnabled() && edge->contact->IsTouching())
+					{hasContacts = true; break;}
+
 			const b2Transform& xf = b->GetTransform();
 			for (b2Fixture* f = b->GetFixtureList(); f; f = f->GetNext())
 			{
@@ -1154,7 +1159,7 @@ void b2World::DrawDebugData()
 				}
 				else if (b->GetType() == b2_staticBody)
 				{
-					DrawShape(f, xf, b2Color(0.5f, 0.9f, 0.5f));
+					DrawShape(f, xf, hasContacts ? b2Color(0.9f, 0.1f, 0.1f) : b2Color(0.5f, 0.9f, 0.5f));
 				}
 				else if (b->GetType() == b2_kinematicBody)
 				{
